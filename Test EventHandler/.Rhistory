install.packages("shiny")
install.packages("ggplot")
install.packages("ggplt")
install.packages("ggplot2")
install.packages("forecast")
install.packages("htmlwidgets")
install.packages("ggvis")
install.packages("rmarkdown")
library(DT)
library(sigma)
demo()
library("Swirl")
library(swirl)
bye()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
play()
?formula
nxt()
regrline <- lm(child ~ parent, galton)
View(galton)
View(galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
View(galton)
mean(c(1,2,3,4))
round(c(1,2,3,4))
asdf <- c(1,2,3,4)
asdf
qwer <- c(asdf;asdf)
?m
?c
matrix
?matrix
qwer <- matrix(c(asdf,asdf))
qwer
qwer <- matrix(c(asdf,asdf),nrow = 2, ncol = 4)
qwer
asdf
qwer <- matrix(c(asdf,asdf),nrow = 4, ncol = 2)
qwer
qwer = c(qwer,qwer)
qwer
qwer <- matrix(c(asdf,asdf),nrow = 4, ncol = 2)
qwer
asdf <- c(qwer,qwer)
asdf
qwer
rowsum(qwer)
row
rowMeans(qwer)
qwer
colMeans(qwer)
rowSums(qwer)
qwer
data.entry()
data.entry(
asdf
asdf)
?data.entry
data.entry(x,y)
edit(qwer)
data.entry(qwer)
qwer
qwer
qwer <- matrix(c(asdf,asdf),nrow = 4, ncol = 2)
qwer <- matrix(c(asdf,asdf),nrow = 4, ncol = 2)
asdf <- c(1,2,3,4)
qwer <- matrix(c(asdf,asdf),nrow = 4, ncol = 2)
qwer
data.entry(qwer)
data.entry(qwer)
qwer
qwer(1:4,1)
QWER
qwer
qwer(1:3,)
qwer(1:3)
qwer[1:3]
qwer[1:4]
qwer[1,1:4]
qwer[1:4,1]
qwer[1:4,2] <- c(2,3,4,5)
qwer
qwer[1:4,2]
qwer
for (i in 1:5) print(1:i)
for(n in c(2,5,10,20,50)) {}
for(n in c(2,5,10,20,50)) {x<- stats::rnorm(n)}
for(n in c(2,5,10,20,50)) {x<- stats::rnorm(n) cat(n,":")}
for(n in c(2,5,10,20,50)) {x<- stats::rnorm(n) , cat(n,":")}
for(n in c(2,5,10,20,50)) {x<- stats::rnorm(n) ... cat(n,":")}
for(n in c(2,5,10,20,50)) {x<- stats::rnorm(n)at(n,":")}
for(n in c(2,5,10,20,50)) {x<- stats::rnorm(n) \ cat(n,":")}
for(n in c(2,5,10,20,50)) {x<- stats::rnorm(n)
cat(n,":",sum(x^2), "\n" sep = "")
for(n in c(2,5,10,20,50)) {x<- stats::rnorm(n)
cat(n,": ",sum(x^2), "\n", sep = "")}
f <- factor(sample(letters[1:5], 10, replace = TRUE))
for (i in unique(f)) print i
for (i in unique(f)) print(i)
letters
?intersect
library(shiny)
?shiny
type(galton)
typeof(galton)
runExample("01_hello")
runExample("01_hello")
runExample("02_text")
runExample("03_reactivity")
runExample("03_reactivity")
runExample("05_sliders")
runExample("06_tabsets")
if (packageVersion('shiny') > '0.7') {
library(shiny)
runGitHub("shiny-examples", "rstudio", subdir = "012-datatables")
}
runExample("07_widgets")
install.packages(xlsx)
install.packages("xlsx)
""
)
install.packages("xlsx")
install.packages("openxlsx")
library(shiny)
runExample(-1)
runExample(11_timer)
runExample("11_timer")
runExample("03_reactivity")
demo()
demo('graphics')
---
?addPolygons
library(leaflet)
addPolygons
?addPolygons
library(shiny)
options(shiny.reactlog=TRUE)
setwd("~/Desktop/RFolder/Tests/Test Reactivity")
source('~/Desktop/RFolder/Tests/Test Reactivity/runApplication.R')
source('~/Desktop/RFolder/Tests/Test Reactivity/runApplication.R')
Sys.time()
class(sys.time())
class(Sys.time())
Sys.timezone()
Sys.timezone()
Sys.timezone()
Sys.timezone()
Sys.timezone()
Sys.Date()
Sys.time()
library(lubridate)
?lubridate
tz(Sys.time())
